// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Voucher_System.Models;

namespace Voucher_System.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220515164141_check")]
    partial class check
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Voucher_System.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("lastActive")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("passwordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("passwordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Voucher_System.Models.CustomerVoucher", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.Property<Guid?>("VoucherId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CustomerId", "VoucherId");

                    b.HasIndex("VoucherId1");

                    b.ToTable("CustomerVoucher");
                });

            modelBuilder.Entity("Voucher_System.Models.Merchent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("lastActive")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("passwordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("passwordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Merchents");
                });

            modelBuilder.Entity("Voucher_System.Models.Voucher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MerchentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NoOfUsage")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VoucherCategory")
                        .HasColumnType("int");

                    b.Property<int>("VoucherType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MerchentId");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("Voucher_System.Models.CustomerVoucher", b =>
                {
                    b.HasOne("Voucher_System.Models.Customer", "Customer")
                        .WithMany("CustomerVouchers")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Voucher_System.Models.Voucher", "Voucher")
                        .WithMany("CustomerVouchers")
                        .HasForeignKey("VoucherId1");

                    b.Navigation("Customer");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("Voucher_System.Models.Voucher", b =>
                {
                    b.HasOne("Voucher_System.Models.Merchent", "Merchent")
                        .WithMany("Vouchers")
                        .HasForeignKey("MerchentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Merchent");
                });

            modelBuilder.Entity("Voucher_System.Models.Customer", b =>
                {
                    b.Navigation("CustomerVouchers");
                });

            modelBuilder.Entity("Voucher_System.Models.Merchent", b =>
                {
                    b.Navigation("Vouchers");
                });

            modelBuilder.Entity("Voucher_System.Models.Voucher", b =>
                {
                    b.Navigation("CustomerVouchers");
                });
#pragma warning restore 612, 618
        }
    }
}
